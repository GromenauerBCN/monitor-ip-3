import React from 'react';
import { useTranslation } from 'react-i18next';

const LANGS = [
  { code: 'ca', label: 'Catal√†', flag: 'üá¶üá©' },
  { code: 'gl', label: 'Galego', flag: 'üá™üá∏' },
  { code: 'eu', label: 'Euskara', flag: 'üá™üá∏' },
  { code: 'en', label: 'English', flag: 'üá¨üáß' },
  { code: 'fr', label: 'Fran√ßais', flag: 'üá´üá∑' },
  { code: 'de', label: 'Deutsch', flag: 'üá©üá™' },
  { code: 'it', label: 'Italiano', flag: 'üáÆüáπ' },
  { code: 'ru', label: '–†—É—Å—Å–∫–∏–π', flag: 'üá∑üá∫' },
  { code: 'bg', label: '–ë—ä–ª–≥–∞—Ä—Å–∫–∏', flag: 'üáßüá¨' },
  { code: 'ro', label: 'Rom√¢nƒÉ', flag: 'üá∑üá¥' },
  { code: 'sr', label: '–°—Ä–ø—Å–∫–∏', flag: 'üá∑üá∏' },
  { code: 'zh-Hans', label: 'ÁÆÄ‰Ωì‰∏≠Êñá', flag: 'üá®üá≥' },
  { code: 'ja', label: 'Êó•Êú¨Ë™û', flag: 'üáØüáµ' },
  { code: 'hi', label: '‡§π‡§ø‡§®‡•ç‡§¶‡•Ä', flag: 'üáÆüá≥' },
  { code: 'id', label: 'Indonesia', flag: 'üáÆüá©' },
  { code: 'ar', label: 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©', flag: 'üá∏üá¶' },
  { code: 'sw', label: 'Kiswahili', flag: 'üáπüáø' },
  { code: 'tsw', label: 'Taushiro', flag: 'üáµüá™' },
  { code: 'mi', label: 'MƒÅori', flag: 'üá≥üáø' },
  { code: 'qu', label: 'Kichwa', flag: 'üá™üá®' },
  { code: 'es', label: 'Espa√±ol', flag: 'üá™üá∏' },
];

export default function Header({ onLogout, onSettings }: { onLogout: () => void, onSettings: () => void }) {
  const { t, i18n } = useTranslation();
  return (
    <header className="sticky top-0 z-50 bg-slate-900 text-white">
      <div className="max-w-5xl mx-auto flex items-center gap-3 p-3">
        <img src="/icons/radar-64.png" onError={(e:any)=>{e.currentTarget.src='/icons/radar-192.png'}} className="w-8 h-8 rounded" />
        <h1 className="text-xl font-semibold">{t('appTitle')}</h1>
        <div className="ml-auto flex items-center gap-2">
          <select
            className="bg-slate-800 px-2 py-1 rounded"
            value={i18n.language}
            onChange={(e) => { i18n.changeLanguage(e.target.value); localStorage.setItem('lang', e.target.value); }}>
            {LANGS.map(l => <option key={l.code} value={l.code}>{l.flag} {l.label}</option>)}
          </select>
          <button onClick={onSettings} className="bg-sky-500 hover:bg-sky-400 text-slate-900 px-3 py-1 rounded-full">‚öôÔ∏è</button>
          <button onClick={onLogout} className="bg-slate-800 hover:bg-slate-700 px-3 py-1 rounded-full">{t('logout')}</button>
        </div>
      </div>
    </header>
  );
}
