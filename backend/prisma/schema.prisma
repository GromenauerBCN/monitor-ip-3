generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String              @id @default(cuid())
  email         String              @unique
  passwordHash  String
  createdAt     DateTime            @default(now())
  monitors      MonitorTarget[]
  notif         NotificationSettings?
  devices       PushDevice[]
}

model MonitorTarget {
  id              String        @id @default(cuid())
  userId          String
  user            User          @relation(fields: [userId], references: [id])

  label           String
  kind            String        // "http" | "tcp"
  address         String        // URL o host/IP
  port            Int?
  intervalMinutes Int           @default(20)
  enabled         Boolean       @default(true)

  lastCheckedAt   DateTime?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  // Camps per control d’estat i alertes
  lastStatus      String?       // "UP" | "DOWN"
  lastAlertAt     DateTime?

  // Històric de checks
  checks          CheckResult[]
}

model CheckResult {
  id        String         @id @default(cuid())
  targetId  String
  target    MonitorTarget  @relation(fields: [targetId], references: [id])
  ok        Boolean
  latencyMs Int?
  error     String?
  checkedAt DateTime       @default(now())
}

model NotificationSettings {
  id              String   @id @default(cuid())
  userId          String   @unique
  user            User     @relation(fields: [userId], references: [id])
  emailRecipients String[]
  telegramChatId  String?
  connectToken    String?
  dailyDigest     Boolean  @default(true)
  monthlyDigest   Boolean  @default(true)
}

model PushDevice {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  expoToken String   @unique
  createdAt DateTime @default(now())
}
